name: Build and Deploy Docker Images

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Postgres Docker Image
        run: docker build -t my_postgres_image:latest -f ./Dockerfile .

      - name: Build Node Docker Image
        run: docker build -t my_node_image:latest -f ./client/Dockerfile ./client

      - name: Build Elixir Docker Image
        run: docker build -t mon_image_elixir:latest -f ./serveur/Dockerfile ./serveur

      - name: Save Postgres Image
        run: docker save my_postgres_image:latest | gzip > my_postgres_image.tar.gz

      - name: Save Node Image
        run: docker save my_node_image:latest | gzip > my_node_image.tar.gz

      - name: Save Elixir Image
        run: docker save mon_image_elixir:latest | gzip > mon_image_elixir.tar.gz

      - name: Install SSHPass
        run: sudo apt-get install -y sshpass

      - name: Copy Docker Images to Azure VM for DB and API
        env:
          VM_PASSWORD: ${{ secrets.VM_PASSWORD }}
          HOST: 20.39.244.131
          USER: timemanager
        run: |
          sshpass -p "$VM_PASSWORD" scp -o StrictHostKeyChecking=no my_postgres_image.tar.gz mon_image_elixir.tar.gz $USER@$HOST:~/

      - name: Copy Docker Images to Azure VM for Frontend
        env:
          VM_PASSWORD: ${{ secrets.VM_PASSWORD }}
          HOST: 20.199.91.106
          USER: timemanager
        run: |
          sshpass -p "$VM_PASSWORD" scp -o StrictHostKeyChecking=no my_node_image.tar.gz $USER@$HOST:~/

      - name: Load and Run Docker Images on Azure VM for DB and API
        env:
          VM_PASSWORD: ${{ secrets.VM_PASSWORD }}
          HOST: 20.39.244.131
          USER: timemanager
        run: |
          sshpass -p "$VM_PASSWORD" scp -o StrictHostKeyChecking=no my_postgres_image.tar.gz mon_image_elixir.tar.gz $USER@$HOST:~/
          sshpass -p "$VM_PASSWORD" ssh -o StrictHostKeyChecking=no $USER@$HOST "
          sudo docker load < my_postgres_image.tar.gz
          sudo docker stop postgres_db || true
          sudo docker rm postgres_db || true
          sudo docker run -d --name postgres_db -e POSTGRES_USER=timemanager -e POSTGRES_PASSWORD=timemanagerapi -e POSTGRES_DB=timemanagerdb -p 5432:5432 my_postgres_image:latest
          
          sudo docker load < mon_image_elixir.tar.gz
          sudo docker stop elixir_app_container || true
          sudo docker rm elixir_app_container || true
          sudo docker run -d --name elixir_app_container -p 4000:4000 mon_image_elixir:latest
          "

      - name: Load and Run Docker Images on Azure VM for Frontend
        env:
          VM_PASSWORD: ${{ secrets.VM_PASSWORD }}
          HOST: 20.199.91.106
          USER: timemanager
        run: |
          sshpass -p "$VM_PASSWORD" scp -o StrictHostKeyChecking=no my_node_image.tar.gz $USER@$HOST:~/
          sshpass -p "$VM_PASSWORD" ssh -o StrictHostKeyChecking=no $USER@$HOST "
          sudo docker load < my_node_image.tar.gz
          sudo docker stop node_frontend || true
          sudo docker rm node_frontend || true
          sudo docker ps -a | grep '0.0.0.0:8080->8080' | awk '{print \$1}' | xargs -I {} sudo docker rm -f {}
          sudo docker run -d --name node_frontend -p 8080:8080 my_node_image:latest
          "
